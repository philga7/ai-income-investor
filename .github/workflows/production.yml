name: Production Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install

      - name: Cache Vercel build
        uses: actions/cache@v3
        with:
          path: .vercel
          key: ${{ runner.os }}-vercel-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vercel-

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Setup Vercel Configuration
        run: |
          mkdir -p .vercel
          echo '{"orgId":"${{ secrets.VERCEL_ORG_ID }}","projectId":"${{ secrets.VERCEL_PROJECT_ID }}"}' > .vercel/project.json

      - name: Verify Environment Variables
        run: |
          if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ]; then
            echo "Error: NEXT_PUBLIC_SUPABASE_URL is not set"
            exit 1
          fi
          if [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ]; then
            echo "Error: NEXT_PUBLIC_SUPABASE_ANON_KEY is not set"
            exit 1
          fi

      - name: Pull Vercel Environment Information
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          vercel build --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: |
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} \
            --env NEXT_PUBLIC_SUPABASE_URL="$NEXT_PUBLIC_SUPABASE_URL" \
            --env NEXT_PUBLIC_SUPABASE_ANON_KEY="$NEXT_PUBLIC_SUPABASE_ANON_KEY"