name: Production Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.52.0-noble
    environment: production
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install

      - name: Run E2E Tests
        run: |
          npm run serve & 
          npx wait-on tcp:3000 && npm run test:e2e
        env:
          HOME: /root

      - name: Configure Git
        run: |
          git config --global --add safe.directory /__w/ai-income-investor/ai-income-investor

      - name: Cache Vercel build
        uses: actions/cache@v3
        with:
          path: .vercel
          key: ${{ runner.os }}-vercel-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vercel-

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up background processes"
          pkill -f "node" || true